/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.qoopo.engine3d.editor.entidad.componentes.fisica.vehiculo;

import java.util.HashMap;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import net.qoopo.engine3d.componentes.QComponente;
import net.qoopo.engine3d.componentes.QEntidad;
import net.qoopo.engine3d.componentes.QUtilComponentes;
import net.qoopo.engine3d.componentes.fisica.colisiones.detectores.contenedores.primitivas.AABB;
import net.qoopo.engine3d.componentes.fisica.vehiculo.QVehiculoControl;
import net.qoopo.engine3d.componentes.geometria.QGeometria;
import net.qoopo.engine3d.componentes.geometria.primitivas.QVertice;
import net.qoopo.engine3d.core.escena.QEscena;

/**
 *
 * @author alberto
 */
public class PnlControlVehiculo extends javax.swing.JPanel {

    private QVehiculoControl componente;
    private Map<String, QEntidad> mapa = new HashMap<>();

    /**
     * Creates new form PnlCubo
     */
    public PnlControlVehiculo(QVehiculoControl componente) {
        initComponents();
        this.componente = componente;

        DefaultComboBoxModel modelo = new DefaultComboBoxModel<>();
        for (QEntidad entidad : QEscena.INSTANCIA.getListaEntidades()) {
            for (QComponente comp : entidad.getComponentes()) {
                if (comp instanceof QGeometria) { // que tenga una geometria
                    modelo.addElement(entidad.getNombre());
                    mapa.put(entidad.getNombre(), entidad);
                }
            }
        }
        cboRueda.setModel(modelo);
//          if (componente.getB() != null) {
//            cboFisico.setSelectedItem(componente.getB().entidad.nombre);
//        }
        aplicarCambios();
        actualizarListaRuedas();
    }

    private void aplicarCambios() {
//        componente.setB(mapa.get(cboFisico.getSelectedItem().toString()));
//        componente.setRadio(Float.parseFloat(txtRadio.getText()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cboRueda = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        lblChasis = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Control Veh√≠culo"));

        jLabel1.setText("Agregar rueda:");

        cboRueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboRueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboRuedaActionPerformed(evt);
            }
        });

        jLabel2.setText("Chasis:");

        lblChasis.setText("N/A");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("RUEDAS");
        jLabel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboRueda, 0, 225, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblChasis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jSeparator2)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblChasis))
                .addGap(9, 9, 9)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(7, 7, 7)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboRueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cboRuedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboRuedaActionPerformed
        //intenta calcular el ancho y el radi ode la rueda

        QEntidad entidadRueda = mapa.get(cboRueda.getSelectedItem().toString());
        if (entidadRueda != null) {
            QGeometria geometria = QUtilComponentes.getGeometria(entidadRueda);
            AABB tmp = new AABB(geometria.vertices[0].clone(), geometria.vertices[0].clone());

            for (QVertice vertice : geometria.vertices) {
                if (vertice.ubicacion.x < tmp.aabMinimo.ubicacion.x) {
                    tmp.aabMinimo.ubicacion.x = vertice.ubicacion.x;
                }
                if (vertice.ubicacion.y < tmp.aabMinimo.ubicacion.y) {
                    tmp.aabMinimo.ubicacion.y = vertice.ubicacion.y;
                }
                if (vertice.ubicacion.z < tmp.aabMinimo.ubicacion.z) {
                    tmp.aabMinimo.ubicacion.z = vertice.ubicacion.z;
                }
                if (vertice.ubicacion.x > tmp.aabMaximo.ubicacion.x) {
                    tmp.aabMaximo.ubicacion.x = vertice.ubicacion.x;
                }
                if (vertice.ubicacion.y > tmp.aabMaximo.ubicacion.y) {
                    tmp.aabMaximo.ubicacion.y = vertice.ubicacion.y;
                }
                if (vertice.ubicacion.z > tmp.aabMaximo.ubicacion.z) {
                    tmp.aabMaximo.ubicacion.z = vertice.ubicacion.z;
                }
            }
        }
    }//GEN-LAST:event_cboRuedaActionPerformed

    private void actualizarListaRuedas() {

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cboRueda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblChasis;
    // End of variables declaration//GEN-END:variables
}
